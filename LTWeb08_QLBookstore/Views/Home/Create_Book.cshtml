@model LTWeb08_QLBookstore.Models.SACH

@{
    ViewBag.Title = "Create_Book";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>THÊM MỚI SÁCH</h2>


@using (Html.BeginForm("Create_Book", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @*Tên sách*@
    <div class="form-group">
        @Html.LabelFor(model => model.TENSACH, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TENSACH, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TENSACH, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MASACH, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MASACH, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MASACH, "", new { @class = "text-danger" })
        </div>
    </div>


    @*Gía bán*@
    <div class="form-group">
        @Html.LabelFor(model => model.GIABAN, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GIABAN, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GIABAN, "", new { @class = "text-danger" })
        </div>
    </div>
    @*Mô tả*@
    <div class="form-group">
        @Html.LabelFor(model => model.MOTA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.MOTA, new { @class = "form-control", rows = 6, placeholder = "Mô tả thông tin sách" })
        </div>
    </div>

    @*Ảnh bìa*@
    <div class="form-group">
        @Html.LabelFor(model => model.ANHBIA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="fileupload" />
            @ViewBag.Thongbao
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NGAYCAPNHAT, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="date" name="NgayCapNhat" />
            @Html.ValidationMessageFor(model => model.NGAYCAPNHAT, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MACHUDE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MACHUDE, (SelectList)ViewBag.MaCD, "--- Chọn chủ đề ---", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MANXB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MANXB")
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "ListBook")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script src="https://cdn.ckeditor.com/ckeditor5/41.1.0/classic/ckeditor.js"></script>
    <script>
        ClassicEditor
            .create(document.querySelector('#Mota'), {
                toolbar: [
                    'undo', 'redo', '|',
                    'heading', '|',
                    'bold', 'italic', 'underline', 'strikethrough', '|',
                    'link', 'bulletedList', 'numberedList', '|',
                    'blockQuote', 'insertTable', 'imageUpload', '|',
                    'alignment', 'fontColor', 'fontBackgroundColor'
                ]
            })
            .then(editor => {
                console.log('CKEditor loaded', editor);
            })
            .catch(error => {
                console.error(error);
            });
    </script>



}
